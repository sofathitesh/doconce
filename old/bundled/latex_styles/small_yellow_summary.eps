%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (small_yellow_summary.eps)
%%CreationDate: (2013-05-16T17:15:53+02:00)
%%BoundingBox: -0 -0 32 32
%%HiResBoundingBox: 0 0 32 32
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 32 32
userdict begin
DisplayImage
0 0
32 32
12
32 32
0
0
000000ADAFAFADB0B0ACAEAEABAEAEABAEAEABAEAEABAEAEABAEAEABAEAEABAEAEABAEAEABAEAE
ABAEAEABAEAEABAEAEABAEADABAEAEADAFAFAAACAC000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
000000D18ABED087B9000000FFFFFFFFFFFF000000ADAFAFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE9E9E9
A5A7A7000000FFFFFFFFFFFFFFFFFF000000D786C1E3B1E6D6A7DACC7BAB000000FFFFFF000000
ACAEAEFFFFFFDEDFE0DFE0E1DFE0E1DFE0E1DFE0E1DFE0E1DFE0E1DFE0E1DFE0E1DFE0E1DFE0E1
DFE0E1DFE0E1DEDFE0FFFFFFA3A5A5FFFFFFE7E7E7A6A9A9000000FFFFFF000000A0A5A6929C99
DBA2DBCE99D0C28FC8CA709F000000000000ABAEAEFFFFFFE0E1E2E1E2E3E2E3E4E2E3E4E2E3E4
E2E3E4E2E3E4E2E3E4E2E3E4E2E3E4E2E3E4E2E3E4E1E2E3E0E1E2FFFFFFA4A7A7EFEFF0FFFFFF
E6E7E8A9AEB00000009FA2A8D4D7D8E5E8E7818A86C98CCABA84C1C86B98000000000000ABAEAE
FFFFFFE1E2E3E3E4E5E3E4E5E3E4E5E3E4E5E3E4E5E3E4E5E3E4E5E3E4E5E3E4E5E3E4E5E3E4E5
E3E4E5E1E2E3FFFFFFA5A7A7F8F9F9ECEDEFFFFFFFE7EEF7CB7218A6ACB8E2E5E9C0C2C3989C9B
72807BCD6A9A000000000000000000ABAEAEFFFFFFE2E3E4E4E5E6E4E5E6E4E5E6E4E5E6E4E5E6
E4E5E6E4E5E6E4E5E6E4E5E6E4E5E6E4E5E6E4E5E6E2E3E4FFFFFFA5A7A7FFFFFFF8FCFFEFF7FF
C36D1AFFDC77FFF9D7939EAB9799A06F71736C7875000000000000000000000000ABAEAEFFFFFF
E3E4E6E5E6E7E5E6E7E5E6E7E5E6E7E5E6E7E5E6E7E5E6E7E5E6E7E5E6E7E5E6E7E5E6E7E5E6E7
E3E4E5FFFFFFCACCCDA5AAAEA5B0BAC46F1BFFDB78FFF6DEFFBF5FFF9A0A717E8B71777B000000
000000000000FFFFFF000000ABAEADFFFFFFE4E6E7E6E7E8E6E7E8E6E7E8E6E7E8E6E7E9E7E8EA
E6E7E9E6E7E8E6E7E8E6E7E8E6E7E8E6E7E8E5E6E7F2F2F4FFFFFFFFFFFFC46F1CFFDC79FFF6DE
FFBD62FF9814FF9C13A66E32000000000000000000FFFFFFFFFFFF000000ABADADFFFFFFE7E7E8
E8E8EAEAE9EBE9E9EBEAE9ECEDEBF0F0EDF4ECEAEFE9E8EAE8E8E9E8E8E9E8E8E9E8E8E9E8E8EA
E8EBEFE8F0FBC16C19FFDB78FFF6DEFFBD62FF9814FF9B169B6D3B000000000000000000FFFFFF
FFFFFFFFFFFF000000ABADADFFFFFFE9E9EBEEECF1F2EFF7F1EFF4F3F0F7FAF4FF226E00F2EFF7
EBEAECE9E9EAE9E9EAE9E9EAE9EAECEAEDF1EBF2FDC16D19FFDA78FFF6DEFFBD62FF9714FF9912
996834000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF000000ABADADFFFFFFEDECEFD5D0DA
267200C7C1CFCAC3D32B750078A443F3F0F9ECECEEEAEAEBEAEAEBEBEBEDEBEEF3ECF4FFC26D19
FFDB78FFF6DEFFBD62FF9713FF971095622BAFBCC7000000000000FFFFFFFFFFFFFFFFFFFFFFFF
FFFFFF000000ABADADFFFFFFF0F0F2C6C1CD307900FFFFFF2F7800699436FCF8FFF3F2F6EFF0F1
EEEFEFEEEFF0EFF2F6EEF7FFC26D1AFFDB78FFF6DEFFBD62FF9714FF960F915D26FFFFFFAEB3B6
000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000ABADADFFFFFFF1F2F4C8C2CF357B00
357A007CA64AC7C2CEF7F6FA9A9A9BBEBEBEBDBEBEF1F5F99BA3ACC46F1CFFDB79FFF6DEFFBD62
FF9714FF960F915D26F1FBFFFFFFFFACAFAF000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
000000ABADADFFFFFFF2F2F4C5C0CA2E770082AC4FFAF6FFBFBDC1F4F4F6F2F3F3F1F3F3F1F4F7
F2FBFFC46F1BFFDC79FFF6DFFFBD62FF9714FF960F915D26F2FCFFEFF3F6FFFFFFABADAD000000
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000ABADADFFFFFFF1F2F2D4D2D6C5C0CAC4C0C8
BFBDC2D5D3D8F9F7FDF3F3F6F0F2F4F1F8FFC36C16FFDB77FFF6DDFFBD62FF9714FF960F915D26
F3FDFFF0F4F7EEF0F0FFFFFFABADAD000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000
ABADADFFFFFFF1F2F4F8F7FCFEFCFFFDFBFFFDFCFFFFFFFF216E00F9F7FFF3F6FBD0BDA3D9B774
FFFBEBFFBC5DFF9612FF960F915D26F4FEFFF1F5F9EFF1F2EFF0F1FFFFFFABADAD000000FFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000ABADADFFFFFFF6F4F7D8D5DD267200C8C2D0CBC4D4
2B75007BA746FCFAFFF7FAFFC19D6BFFFDEFFBDEA9FBB454FF950C915D26F7FFFFF4F7FBF2F3F4
F1F1F2F1F1F2FFFFFFABADAD000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000ABADAD
FFFFFFF8F7FBC6C0CC307800FFFFFF2F7700699335FFFFFFFEFFFFDFCBAEE9BD67FFE1A4FAC97B
CC8E40965E23FCFFFFF8FBFFF6F7F8F5F5F6F3F3F4F2F2F3FFFFFFABADAD000000FFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFF000000ABADADFFFFFFFAF9FCC7C2CE357B00357A007CA64AC7C1CD
FFFFFFA2A4A77966487A6D55E7B460A5733392816DC6CBD2C3C5C7C1C1C1C0C0C0BEBEBEF5F5F6
F3F3F4FFFFFFABADAD000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000ABADADFFFFFF
FAF9FCC4BFC92E770082AC4FFAF6FFBFBDC1FFFFFFD5CBBB3C3F46715D41D8C5ABFBFFFFFAFDFF
F9FAFDF8F8FAF8F8F9F7F7F9F7F7F8F5F5F6F4F4F5FFFFFFABADAD000000FFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFF000000ABADADFFFFFFF9FAFBD5D3D9C4BFC9C3BFC8BEBCC1D8D5DCFFFFFF
887F79D0C5B6FFFFFFFAFDFFF7F9FBF6F8F8F6F7F7F6F7F7F6F7F7F6F7F7F5F7F6F5F6F6F5F6F6
FFFFFFABADAD000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000ABADADFFFFFFF9FAFB
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF226E00FFFFFFFDFEFFF9FAFBF7F8F9F6F7F7F6F7F7F6F7F7
F6F7F7F6F7F7F6F7F7F6F7F7F6F7F7F6F7F7FFFFFFABADAD000000FFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFF000000ABADADFFFFFFFEFDFEDBD6DF257100C8C1CFCAC3D32A74007DA848FFFFFF
FBFAFCF9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F9F9F9F9F9F9F8F8F8F9F8F8FFFFFF
ABADAD000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000ABADADFFFFFFFFFFFFC5C0CB
307800FFFFFF2F7700689234FFFFFFFFFFFFFDFDFEFCFCFCFEFDFDFEFEFEFDFDFDFDFDFDFCFCFC
FCFCFCFDFDFDFCFCFCFAFAFAFAFAFAFFFFFFABADAD000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFF000000ABADADFFFFFFFFFFFFC7C1CE347B00357A007CA649C6C0CDFFFFFF969697C2C2C2
FFFFFF979797C3C3C3C3C3C3C2C2C2C1C1C1FFFFFF959595C1C1C1FCFCFCFBFBFBFFFFFFABADAD
000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000ABADADFFFFFFFFFFFFC3BFC82E7700
82AC4FFAF5FFBCBABFFFFFFFFFFFFFFFFFFFFEFEFEFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFE
FFFFFFFEFEFEFCFCFCFCFCFCFFFFFFABADAD000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
000000ABADADFFFFFFFFFFFFD7D6DAC1BDC6C1BDC5BCBABDD4D3D4FFFFFFFDFDFDFDFDFDFCFCFC
FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFDFDFDFDFDFDFCFCFCFDFDFDFFFFFFABADAD000000
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000ABAEAEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE
FEFEFEFEFEFEFFFFFFFFFFFFABAEAE000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000
ADB0B0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFADB0B0000000FFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000AEB0B0ADAFAFABAEAEABADADABADADABADADABADAD
ABADADABADADABADADABADADABADADABADADABADADABADADABADADABADADABADADABADADABADAD
ABADADABAEAEADAFAFAEB0B0000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000FFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF

end
%%PageTrailer
%%Trailer
%%EOF
