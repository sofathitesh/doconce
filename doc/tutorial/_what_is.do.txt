Doconce is a very simple and minimally tagged markup language that
looks like ordinary ASCII text, much like what you would use in an
email, but the text can be transformed to numerous other formats,
including HTML, Sphinx, LaTeX, PDF, reStructuredText (reST), Markdown,
MediaWiki, Google wiki, Creole wiki, Epytext, and also plain text
(where non-obvious formatting/tags are removed for clear reading in,
e.g., emails). From reST or Markdown you can go to XML, OpenOffice, MS
Word, HTML, LaTeX, PDF, DocBook, GNU Texinfo, and more.

Doconce supports a working strategy of never duplicating information.
Text is written in a single place and then transformed to a number of
different destinations of diverse type: scientific reports, software
manuals, books, thesis, software source code, wikis, blogs, emails,
etc.  The slogan is: "Write once, include anywhere".



Here are some Doconce features:

  * Doconce has very strong support for *text with computer source code and
    LaTeX mathematics* in the formats LaTeX, pdfLaTeX, Sphinx, HTML,
    and MediaWiki. A piece of text can enter (e.g.) a classical
    science book, an ebook, a web document, and a blog.
  * Doconce targets in particular large book projects where many different
    pieces of text and software can be assembled and published in different
    formats for different devices.
  * Doconce has good support for copying in parts of computer code
    directly from the source code files via regular expressions
    for the start and end lines.
  * Doconce first runs two preprocessors (Preprocess and Mako), which
    allows programming constructs (includes, if-tests, function calls)
    as part of the text. This feature makes it easy to write one text
    with different flavors: long vs short text, Python vs Matlab code
    examples, experimental vs mature content.
  * Doconce can be converted to plain *untagged* text,
    often desirable for email and computer code documentation.
  * Doconce markup does include tags, so the format is more tagged than
    Markdown, but less than reST, and very much less than
    LaTeX and HTML.
  * Compared to the related tools Sphinx and Markdown, Doconce
    allows more types of equations (especially systems of
    equations with references), has more flexible
    inclusion of source code, integrates preprocessors, has
    special support for exercises, and produces
    cleaner LaTeX and HTML output.

# #ifdef EXTRA
Doconce was particularly written for the following sample applications:

  * Large books written in LaTeX, but where many pieces (computer demos,
    projects, examples) can be written in Doconce to appear in other
    contexts in other formats, including plain HTML, Sphinx, wiki, or MS Word.

  * Software documentation, primarily Python doc strings, which one wants
    to appear as plain untagged text for viewing in Pydoc, as reStructuredText
    for use with Sphinx, as wiki text when publishing the software at
    web sites, and as LaTeX integrated in, e.g., a thesis.

  * Quick memos, which start as plain text in email, then some small
    amount of Doconce tagging is added, before the memos can appear as
    Sphinx web pages, MS Word documents, or in wikis.
# #endif

__History.__ Doconce was developed in 2006 at a time when most popular
markup languages used quite some tagging.  Later, almost untagged
markup languages like Markdown and Pandoc became popular. Doconce is
not a replacement of Pandoc, which is a considerably more
sophisticated project. Moreover, Doconce was developed mainly to
fulfill the needs for a flexible source code base for books with much
mathematics and computer code.

__Disclaimer.__ Doconce is a simple tool, largely based on interpreting
and handling text through regular expressions. The possibility for
tweaking the layout is obviously limited since the text can go to
all sorts of sophisticated markup languages. Moreover, because of
limitations of regular expressions, some formatting of Doconce syntax
may face problems when transformed to HTML, LaTeX, Sphinx, and similar
formats.


